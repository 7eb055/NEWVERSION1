-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.admins
(
    id serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role character varying(20) COLLATE pg_catalog."default" DEFAULT 'admin'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT admins_pkey PRIMARY KEY (id),
    CONSTRAINT admins_email_key UNIQUE (email),
    CONSTRAINT admins_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.attendance_verifications
(
    id serial NOT NULL,
    event_id integer NOT NULL,
    attendee_email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    verification_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    verified boolean DEFAULT false,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    verified_at timestamp without time zone,
    CONSTRAINT attendance_verifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.attendee_listings
(
    id serial NOT NULL,
    event_id integer NOT NULL,
    ticket_type character varying(50) COLLATE pg_catalog."default",
    attendee_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    attendee_email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    registration_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'confirmed'::character varying,
    check_in_time timestamp without time zone,
    special_requirements text COLLATE pg_catalog."default",
    CONSTRAINT attendee_listings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.attendees
(
    attendee_id serial NOT NULL,
    user_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    full_name character varying(200) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT attendees_pkey PRIMARY KEY (attendee_id)
);

CREATE TABLE IF NOT EXISTS public.email_verifications
(
    id serial NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    verification_token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    verified boolean DEFAULT false,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    expires_at timestamp without time zone NOT NULL,
    CONSTRAINT email_verifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.events
(
    id serial NOT NULL,
    title character varying(200) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    date timestamp without time zone NOT NULL,
    location character varying(255) COLLATE pg_catalog."default",
    image_url character varying(500) COLLATE pg_catalog."default",
    capacity integer DEFAULT 100,
    price numeric(10, 2) DEFAULT 0.00,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'draft'::character varying,
    category character varying(100) COLLATE pg_catalog."default",
    organizer_id integer,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    registration_deadline timestamp without time zone,
    tags text[] COLLATE pg_catalog."default",
    venue_details text COLLATE pg_catalog."default",
    contact_email character varying(255) COLLATE pg_catalog."default",
    contact_phone character varying(20) COLLATE pg_catalog."default",
    requires_approval boolean DEFAULT false,
    max_tickets_per_person integer DEFAULT 5,
    is_free boolean DEFAULT true,
    event_type character varying(50) COLLATE pg_catalog."default" DEFAULT 'general'::character varying,
    start_time time without time zone,
    end_time time without time zone,
    timezone character varying(50) COLLATE pg_catalog."default" DEFAULT 'UTC'::character varying,
    registration_instructions text COLLATE pg_catalog."default",
    cancellation_policy text COLLATE pg_catalog."default",
    refund_policy text COLLATE pg_catalog."default",
    age_restriction character varying(50) COLLATE pg_catalog."default",
    dress_code character varying(100) COLLATE pg_catalog."default",
    parking_info text COLLATE pg_catalog."default",
    accessibility_info text COLLATE pg_catalog."default",
    social_links jsonb,
    featured boolean DEFAULT false,
    priority_level integer DEFAULT 1,
    external_registration_url character varying(500) COLLATE pg_catalog."default",
    CONSTRAINT events_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.feedback
(
    id serial NOT NULL,
    event_id integer,
    attendee_name character varying(100) COLLATE pg_catalog."default",
    attendee_email character varying(100) COLLATE pg_catalog."default",
    rating integer,
    comments text COLLATE pg_catalog."default",
    submitted_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT feedback_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.notifications
(
    id serial NOT NULL,
    event_id integer,
    recipient_email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    notification_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    subject character varying(255) COLLATE pg_catalog."default",
    message text COLLATE pg_catalog."default",
    sent_at timestamp without time zone,
    scheduled_for timestamp without time zone,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.organizers
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    company character varying(100) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    bio text COLLATE pg_catalog."default",
    website character varying(255) COLLATE pg_catalog."default",
    profile_image character varying(500) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_verified boolean DEFAULT false,
    verification_token character varying(255) COLLATE pg_catalog."default",
    reset_token character varying(255) COLLATE pg_catalog."default",
    reset_token_expires timestamp without time zone,
    last_login timestamp without time zone,
    organizer_id integer,
    full_name character varying(255) COLLATE pg_catalog."default",
    company_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT organizers_pkey PRIMARY KEY (id),
    CONSTRAINT organizers_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.password_resets
(
    id serial NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    expires_at timestamp without time zone NOT NULL,
    used boolean DEFAULT false,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT password_resets_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.registrations
(
    id serial NOT NULL,
    event_id integer NOT NULL,
    attendee_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    attendee_email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    ticket_type character varying(50) COLLATE pg_catalog."default" DEFAULT 'general'::character varying,
    quantity integer DEFAULT 1,
    total_amount numeric(10, 2) DEFAULT 0.00,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    payment_status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    payment_reference character varying(100) COLLATE pg_catalog."default",
    registration_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    special_requirements text COLLATE pg_catalog."default",
    dietary_preferences character varying(255) COLLATE pg_catalog."default",
    emergency_contact character varying(100) COLLATE pg_catalog."default",
    emergency_phone character varying(20) COLLATE pg_catalog."default",
    company_organization character varying(100) COLLATE pg_catalog."default",
    job_title character varying(100) COLLATE pg_catalog."default",
    how_did_you_hear character varying(100) COLLATE pg_catalog."default",
    additional_info text COLLATE pg_catalog."default",
    confirmation_sent boolean DEFAULT false,
    check_in_status boolean DEFAULT false,
    check_in_time timestamp without time zone,
    qr_code character varying(255) COLLATE pg_catalog."default",
    registration_source character varying(50) COLLATE pg_catalog."default" DEFAULT 'website'::character varying,
    CONSTRAINT registrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ticket_types
(
    id serial NOT NULL,
    event_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    price numeric(10, 2) NOT NULL,
    quantity_available integer,
    quantity_sold integer DEFAULT 0,
    is_active boolean DEFAULT true,
    sale_start_date timestamp without time zone,
    sale_end_date timestamp without time zone,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    tier_level integer DEFAULT 1,
    benefits text[] COLLATE pg_catalog."default",
    restrictions text COLLATE pg_catalog."default",
    transfer_policy character varying(255) COLLATE pg_catalog."default",
    refund_policy character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT ticket_types_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    preferences jsonb,
    is_active boolean DEFAULT true,
    last_login timestamp without time zone,
    password character varying(255) COLLATE pg_catalog."default",
    role character varying(50) COLLATE pg_catalog."default" DEFAULT 'attendee'::character varying,
    is_suspended boolean DEFAULT false,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.attendance_verifications
    ADD CONSTRAINT attendance_verifications_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_attendance_verifications_event_id
    ON public.attendance_verifications(event_id);


ALTER TABLE IF EXISTS public.attendee_listings
    ADD CONSTRAINT attendee_listings_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_attendee_listings_event_id
    ON public.attendee_listings(event_id);


ALTER TABLE IF EXISTS public.events
    ADD CONSTRAINT events_organizer_id_fkey FOREIGN KEY (organizer_id)
    REFERENCES public.organizers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_events_organizer_id
    ON public.events(organizer_id);


ALTER TABLE IF EXISTS public.feedback
    ADD CONSTRAINT feedback_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_feedback_event_id
    ON public.feedback(event_id);


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT notifications_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_notifications_event_id
    ON public.notifications(event_id);


ALTER TABLE IF EXISTS public.registrations
    ADD CONSTRAINT registrations_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_registrations_event_id
    ON public.registrations(event_id);


ALTER TABLE IF EXISTS public.ticket_types
    ADD CONSTRAINT ticket_types_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_ticket_types_event_id
    ON public.ticket_types(event_id);

END;